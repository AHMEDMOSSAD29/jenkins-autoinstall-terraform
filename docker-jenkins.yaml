- name: Install and run Docker
  hosts: node01
  become: true
  gather_facts: yes
  vars:
    user_name: ansible

  tasks:
    - name: Update apt cache (for Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker dependencies
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - pip
      when: ansible_os_family == 'Debian'

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install Docker
      package:
        name: docker-ce
        state: present

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes
    - name: Add user to docker group
      user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

    - name: Change ownership of Docker socket
      file:
        path: /var/run/docker.sock
        owner: "{{ user_name }}"
        group: docker
        mode: '0666'

    - name: Restart Docker daemon
      service:
        name: docker
        state: restarted

    - name: Install Docker SDK for Python library
      pip:
        name: docker
        state: present
    
    - name: Pull Jenkins master image
      docker_image:
        name: ahmedmosaad112/jenkins-with-docker:lts
        source: pull
        state: present
    - name: Pull Jenkins agent image
      docker_image:
        name: ahmedmosaad112/jenkins-ssh-docker
        source: pull
        state: present

    - name: Set permissions for Jenkins volume
      file:
        path: /var/jenkins_home
        state: directory
        owner: "1000"
        group: "1000"
        mode: "0755"

    - name: Create Jenkins master container
      docker_container:
        name: jenkins-master
        image: ahmedmosaad112/jenkins-with-docker:lts
        ports:
          - "8080:8080"
          - "50000:50000"
        volumes:
          - "/var/jenkins_home:/var/jenkins_home"  # you may cahnge volume to be presist
          - "/var/run/docker.sock:/var/run/docker.sock" # to use docker of the host 
        restart_policy: always
        container_default_behavior: compatibility

    - name: Remove existing SSH key pair from Jenkins master container
      command: docker exec jenkins-master rm -f /var/jenkins_home/.ssh/id_rsa /var/jenkins_home/.ssh/id_rsa.pub
      become: true
      ignore_errors: true
        
    - name: Execute command to generate SSH key pair inside Jenkins master container
      command: docker exec jenkins-master ssh-keygen -t rsa -N "" -f /var/jenkins_home/.ssh/id_rsa
      become: true
        
    - name: Copy public key from container to host
      command: docker cp jenkins-master:/var/jenkins_home/.ssh/id_rsa.pub public_key_jenkins
      become: true


      # docker run -d -v /var/run/docker.sock:/var/run/docker.sock --rm --name=jenkins-agent-01 --publish 2200:22 -e "JENKINS_AGENT_SSH_PUBKEY=$(cat /home/ahmed/public_key_jenkins)" ahmedmosaad112/jenkins-ssh-docker